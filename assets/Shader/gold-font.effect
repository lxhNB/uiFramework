
CCEffect %{
techniques:
  - passes:
      - vert: vs
        frag: fs
        blendState:
          targets:
            - blend: true
        rasterizerState:
          cullMode: none
        properties:
          texture:
            value: white
          U1624009177421:
            value:
              - 0.984
              - 1.000
              - 0.424
              - 0.337
            inspector:
              type: color
          u_float_18:
            value: 2.0
          u_float_7:
            value: 0.5
          speed:
            value: 0.3
          u_float_51:
            value: 3.0
          u_rgba_85:
            value:
              - 1.000
              - 0.804
              - 0.129
              - 1.000
            inspector:
              type: color
}%

CCProgram vs %{
    precision highp float;
    #include <cc-global>
    #include <cc-local>

    in vec3 a_position;
    #if USE_TEXTURE
        in vec2 a_uv0;
        out vec2 v_uv0;
    #endif
    in vec4 a_color;
    out vec4 v_color;

    void main () {
        mat4 mvp;
        #if CC_USE_MODEL
            mvp = cc_matViewProj * cc_matWorld;
        #else
            mvp = cc_matViewProj;
        #endif

        #if USE_TEXTURE
            v_uv0 = a_uv0;
        #endif

        #if USE_TINT
            // clear warning for spine
        #endif

        v_color = a_color;
        gl_Position = mvp * vec4(a_position, 1);
    }
}%

CCProgram fs %{
    precision highp float;
    #include <cc-global>
     #include <texture>
    #if USE_TEXTURE
        in vec2 v_uv0;
        uniform sampler2D texture;
    #endif
    in vec4 v_color;
    uniform Constant {
		vec4 U1624009177421;
		vec4 u_rgba_85;
		float u_float_18;
		float u_float_7;
		float speed;
		float u_float_51;
	};

  vec2 c_UV0_main_10() {
	    return v_uv0;
	}
	float c_Mul1_main_86(float InputA, float InputB) {
	    return (InputA * InputB);
	}
	float c_Sub1_main_68(float InputA, float InputB) {
	    return (InputA - InputB);
	}
	float c_Fract1_main_16(float Input) {
	    return fract(Input);
	}
	float c_Sub1_main_20(float InputA, float InputB) {
	    return (InputA - InputB);
	}
	float c_Mul1_main_17(float InputA, float InputB) {
	    return (InputA * InputB);
	}
	float c_Abs1_main_19(float Input) {
	    return abs(Input);
	}
	float c_Pow1_main_21(float InputA, float InputB) {
	    return pow(InputA, InputB);
	}
	vec4 c_Mul4_main_57(vec4 InputA, vec4 InputB) {
	    return (InputA * InputB);
	}
	vec4 c_TextureToRGBA_main_5(vec2 UV, sampler2D Texture) {
      vec4 o = vec4(1, 1, 1, 1);
      CCTexture(texture, v_uv0, o);
	    return o;
	}
	vec4 c_Mul4_main_61(vec4 InputA, vec4 InputB) {
	    return (InputA * InputB);
	}
	vec4 c_Mul4_main_83(vec4 InputA, vec4 InputB) {
	    return (InputA * InputB);
	}
	vec4 c_Add4_main_78(vec4 InputA, vec4 InputB) {
	    return (InputA + InputB);
	}
	vec4 c_Output_main_1(vec4 Color) {
	    return Color;
	}
	void main()
	{
	    vec2 out_UV_UV0_10 = c_UV0_main_10();
	    float out_x_UV0_10 = out_UV_UV0_10.x;
	    float out_Output_Mul1_86 = c_Mul1_main_86(cc_time[0], speed);
	    float out_Output_Sub1_68 = c_Sub1_main_68(out_x_UV0_10, out_Output_Mul1_86);
	    float out_Output_Fract1_16 = c_Fract1_main_16(out_Output_Sub1_68);
	    float out_Output_Sub1_20 = c_Sub1_main_20(0.5, out_Output_Fract1_16);
	    float out_Output_Mul1_17 = c_Mul1_main_17(out_Output_Sub1_20, 2.0);
	    float out_Output_Abs1_19 = c_Abs1_main_19(out_Output_Mul1_17) - 0.1;
      if(out_Output_Abs1_19 < 0.0){
        out_Output_Abs1_19 = 0.0;
      }
	    float out_Output_Pow1_21 = c_Pow1_main_21(out_Output_Abs1_19, 5.0);
	    vec4 out_Output_Mul4_57 = c_Mul4_main_57(vec4(out_Output_Pow1_21), vec4(U1624009177421));
	    vec4 out_Color_TextureToRGBA_5 = c_TextureToRGBA_main_5(v_uv0, texture);
      out_Color_TextureToRGBA_5 *= v_color;
	    float out_a_TextureToRGBA_5 = out_Color_TextureToRGBA_5.a;
	    vec4 out_Output_Mul4_61 = c_Mul4_main_61(vec4(out_a_TextureToRGBA_5), vec4(out_Output_Mul4_57));
	    vec4 out_Output_Mul4_83 = c_Mul4_main_83(vec4(1.000, 0.804, 0.129, 1.000), vec4(0.99, 0.81, 0.15, out_Color_TextureToRGBA_5.a));
	    vec4 out_Output_Add4_78 = c_Add4_main_78(vec4(out_Output_Mul4_83), vec4(out_Output_Mul4_61));
	    gl_FragColor = c_Output_main_1(vec4(out_Output_Add4_78));
	}
}%
